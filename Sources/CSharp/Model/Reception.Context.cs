//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjetSGBDEntities : DbContext
    {
        public ProjetSGBDEntities()
            : base("name=ProjetSGBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Dish> Dish { get; set; }
        public virtual DbSet<Feeling> Feeling { get; set; }
        public virtual DbSet<FeelingType> FeelingType { get; set; }
        public virtual DbSet<Reception> Reception { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<ReservedDish> ReservedDish { get; set; }
        public virtual DbSet<DishType> DishType { get; set; }
        public virtual DbSet<DishWish> DishWish { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<ReceptionAdmin> ReceptionAdmin { get; set; }
        public virtual DbSet<TablesMap> TablesMap { get; set; }
    
        [DbFunction("ProjetSGBDEntities", "GetFeeling")]
        public virtual IQueryable<GetFeeling_Result> GetFeeling(Nullable<int> cliId, Nullable<int> ftyId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var ftyIdParameter = ftyId.HasValue ?
                new ObjectParameter("FtyId", ftyId) :
                new ObjectParameter("FtyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetFeeling_Result>("[ProjetSGBDEntities].[GetFeeling](@CliId, @FtyId)", cliIdParameter, ftyIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetMenu")]
        public virtual IQueryable<GetMenu_Result> GetMenu(Nullable<int> recId, Nullable<int> dtyId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var dtyIdParameter = dtyId.HasValue ?
                new ObjectParameter("DtyId", dtyId) :
                new ObjectParameter("DtyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMenu_Result>("[ProjetSGBDEntities].[GetMenu](@RecId, @DtyId)", recIdParameter, dtyIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetReservableReception")]
        public virtual IQueryable<GetReservableReception_Result> GetReservableReception(Nullable<int> cliId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetReservableReception_Result>("[ProjetSGBDEntities].[GetReservableReception](@CliId)", cliIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetReservation")]
        public virtual IQueryable<GetReservation_Result> GetReservation(Nullable<int> recId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetReservation_Result>("[ProjetSGBDEntities].[GetReservation](@RecId)", recIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetReservedDish")]
        public virtual IQueryable<GetReservedDish_Result> GetReservedDish(Nullable<int> recId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetReservedDish_Result>("[ProjetSGBDEntities].[GetReservedDish](@RecId)", recIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetReservedReception")]
        public virtual IQueryable<GetReservedReception_Result> GetReservedReception(Nullable<int> cliId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetReservedReception_Result>("[ProjetSGBDEntities].[GetReservedReception](@CliId)", cliIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetTableMap")]
        public virtual IQueryable<GetTableMap_Result> GetTableMap(Nullable<int> recId, Nullable<int> tabId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetTableMap_Result>("[ProjetSGBDEntities].[GetTableMap](@RecId, @TabId)", recIdParameter, tabIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetUnfeeling")]
        public virtual IQueryable<GetUnfeeling_Result> GetUnfeeling(Nullable<int> cliId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUnfeeling_Result>("[ProjetSGBDEntities].[GetUnfeeling](@CliId)", cliIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetUnreservation")]
        public virtual IQueryable<GetUnreservation_Result> GetUnreservation(Nullable<int> recId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUnreservation_Result>("[ProjetSGBDEntities].[GetUnreservation](@RecId)", recIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetUnreservedReception")]
        public virtual IQueryable<GetUnreservedReception_Result> GetUnreservedReception(Nullable<int> cliId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUnreservedReception_Result>("[ProjetSGBDEntities].[GetUnreservedReception](@CliId)", cliIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetUnwishedDish")]
        public virtual IQueryable<GetUnwishedDish_Result> GetUnwishedDish(Nullable<int> cliId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUnwishedDish_Result>("[ProjetSGBDEntities].[GetUnwishedDish](@CliId)", cliIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetWishedDish")]
        public virtual IQueryable<GetWishedDish_Result> GetWishedDish(Nullable<int> cliId, Nullable<int> ftyId)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var ftyIdParameter = ftyId.HasValue ?
                new ObjectParameter("FtyId", ftyId) :
                new ObjectParameter("FtyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWishedDish_Result>("[ProjetSGBDEntities].[GetWishedDish](@CliId, @FtyId)", cliIdParameter, ftyIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewFeeling")]
        public virtual IQueryable<NewFeeling_Result> NewFeeling(Nullable<int> cliFromId, Nullable<int> cliToId, Nullable<int> ftyId, string modifiedBy)
        {
            var cliFromIdParameter = cliFromId.HasValue ?
                new ObjectParameter("CliFromId", cliFromId) :
                new ObjectParameter("CliFromId", typeof(int));
    
            var cliToIdParameter = cliToId.HasValue ?
                new ObjectParameter("CliToId", cliToId) :
                new ObjectParameter("CliToId", typeof(int));
    
            var ftyIdParameter = ftyId.HasValue ?
                new ObjectParameter("FtyId", ftyId) :
                new ObjectParameter("FtyId", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewFeeling_Result>("[ProjetSGBDEntities].[NewFeeling](@CliFromId, @CliToId, @FtyId, @ModifiedBy)", cliFromIdParameter, cliToIdParameter, ftyIdParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewReservedDish")]
        public virtual IQueryable<NewReservedDish_Result> NewReservedDish(Nullable<int> cliId, Nullable<int> disId, Nullable<int> recId, string modifiedBy)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewReservedDish_Result>("[ProjetSGBDEntities].[NewReservedDish](@CliId, @DisId, @RecId, @ModifiedBy)", cliIdParameter, disIdParameter, recIdParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewResrvation")]
        public virtual IQueryable<NewResrvation_Result> NewResrvation(Nullable<int> recId, Nullable<int> cliId, string modifiedBy)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewResrvation_Result>("[ProjetSGBDEntities].[NewResrvation](@RecId, @CliId, @ModifiedBy)", recIdParameter, cliIdParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewWishedDish")]
        public virtual IQueryable<NewWishedDish_Result> NewWishedDish(Nullable<int> cliId, Nullable<int> disId, Nullable<int> dtyId, string modifiedBy)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var dtyIdParameter = dtyId.HasValue ?
                new ObjectParameter("DtyId", dtyId) :
                new ObjectParameter("DtyId", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewWishedDish_Result>("[ProjetSGBDEntities].[NewWishedDish](@CliId, @DisId, @DtyId, @ModifiedBy)", cliIdParameter, disIdParameter, dtyIdParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "UpdateFeeling")]
        public virtual IQueryable<UpdateFeeling_Result> UpdateFeeling(Nullable<int> cliFromId, Nullable<int> cliToId, Nullable<int> ftyId, Nullable<System.DateTime> modifiedAt, string modifiedBy)
        {
            var cliFromIdParameter = cliFromId.HasValue ?
                new ObjectParameter("CliFromId", cliFromId) :
                new ObjectParameter("CliFromId", typeof(int));
    
            var cliToIdParameter = cliToId.HasValue ?
                new ObjectParameter("CliToId", cliToId) :
                new ObjectParameter("CliToId", typeof(int));
    
            var ftyIdParameter = ftyId.HasValue ?
                new ObjectParameter("FtyId", ftyId) :
                new ObjectParameter("FtyId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UpdateFeeling_Result>("[ProjetSGBDEntities].[UpdateFeeling](@CliFromId, @CliToId, @FtyId, @ModifiedAt, @ModifiedBy)", cliFromIdParameter, cliToIdParameter, ftyIdParameter, modifiedAtParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "UpdateWishedDish")]
        public virtual IQueryable<UpdateWishedDish_Result> UpdateWishedDish(Nullable<int> cliId, Nullable<int> disId, Nullable<int> dtyId, Nullable<System.DateTime> modifiedAt, string modifiedBy)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var dtyIdParameter = dtyId.HasValue ?
                new ObjectParameter("DtyId", dtyId) :
                new ObjectParameter("DtyId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UpdateWishedDish_Result>("[ProjetSGBDEntities].[UpdateWishedDish](@CliId, @DisId, @DtyId, @ModifiedAt, @ModifiedBy)", cliIdParameter, disIdParameter, dtyIdParameter, modifiedAtParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "GetDishToPrepare")]
        public virtual IQueryable<GetDishToPrepare_Result> GetDishToPrepare(Nullable<int> recId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDishToPrepare_Result>("[ProjetSGBDEntities].[GetDishToPrepare](@RecId)", recIdParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewMenu")]
        public virtual IQueryable<NewMenu_Result> NewMenu(Nullable<int> recId, Nullable<int> disId, string modifiedBy)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewMenu_Result>("[ProjetSGBDEntities].[NewMenu](@RecId, @DisId, @ModifiedBy)", recIdParameter, disIdParameter, modifiedByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewSit")]
        public virtual IQueryable<NewSit_Result> NewSit(Nullable<int> tabId, Nullable<int> cliId, string updateBy)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewSit_Result>("[ProjetSGBDEntities].[NewSit](@TabId, @CliId, @UpdateBy)", tabIdParameter, cliIdParameter, updateByParameter);
        }
    
        [DbFunction("ProjetSGBDEntities", "NewTable")]
        public virtual IQueryable<NewTable_Result> NewTable(Nullable<int> recId, string updateBy)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NewTable_Result>("[ProjetSGBDEntities].[NewTable](@RecId, @UpdateBy)", recIdParameter, updateByParameter);
        }
    
        public virtual int DeleteDishWish(Nullable<int> cliId, Nullable<int> disId, Nullable<System.DateTime> modifiedAt)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDishWish", cliIdParameter, disIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteFeeling(Nullable<int> cliId, Nullable<int> cliCliId, Nullable<System.DateTime> modifiedAt)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var cliCliIdParameter = cliCliId.HasValue ?
                new ObjectParameter("CliCliId", cliCliId) :
                new ObjectParameter("CliCliId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFeeling", cliIdParameter, cliCliIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteReservation(Nullable<int> recId, Nullable<int> cliId, Nullable<System.DateTime> modifiedAt)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReservation", recIdParameter, cliIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteReservedDish(Nullable<int> cliId, Nullable<int> disId, Nullable<int> recId, Nullable<System.DateTime> modifiedAt)
        {
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReservedDish", cliIdParameter, disIdParameter, recIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteMenu(Nullable<int> recId, Nullable<int> disId, Nullable<System.DateTime> modifiedAt)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var disIdParameter = disId.HasValue ?
                new ObjectParameter("DisId", disId) :
                new ObjectParameter("DisId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMenu", recIdParameter, disIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteSit(Nullable<int> tabId, Nullable<int> cliId, Nullable<System.DateTime> modifiedAt)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var cliIdParameter = cliId.HasValue ?
                new ObjectParameter("CliId", cliId) :
                new ObjectParameter("CliId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSit", tabIdParameter, cliIdParameter, modifiedAtParameter);
        }
    
        public virtual int DeleteTable(Nullable<int> tabId, Nullable<System.DateTime> modifiedAt)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var modifiedAtParameter = modifiedAt.HasValue ?
                new ObjectParameter("ModifiedAt", modifiedAt) :
                new ObjectParameter("ModifiedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTable", tabIdParameter, modifiedAtParameter);
        }
    }
}
